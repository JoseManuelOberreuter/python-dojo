# Test rÃ¡pido de Python #16
# -----------------------------------------------
# Â¿CuÃ¡l es el resultado de este cÃ³digo?

# CÃ³digo:
print(5 // 2)

# Opciones:
# A) 2.5
# B) 2
# C) 3



# ğŸ‘‡ğŸ‘‡ğŸ‘‡ SPOILER: no sigas bajando si no quieres ver la respuesta ğŸ‘‡ğŸ‘‡ğŸ‘‡

































































































































"""
Respuesta correcta: B) 2

ExplicaciÃ³n:
El operador `//` en Python realiza una divisiÃ³n entera, 
tambiÃ©n conocida como divisiÃ³n con redondeo hacia abajo o floor division.

Esto significa que el resultado serÃ¡ el cociente sin decimales, 
redondeado hacia el nÃºmero entero mÃ¡s bajo (hacia abajo en la recta numÃ©rica),
incluso si el nÃºmero es negativo.

En este caso:

    5 // 2

El resultado de 5 dividido por 2 es 2.5, pero como estamos usando `//`, 
el decimal se descarta y se obtiene:

    2

No se redondea al entero mÃ¡s cercano (eso serÃ­a 3), 
ni se mantiene el decimal. Simplemente se toma el nÃºmero entero 
mÃ¡s bajo que no exceda el resultado real.

Ejemplos adicionales:

    10 // 3    â†’ 3
    9 // 4     â†’ 2
    5 // 2     â†’ 2
    -5 // 2    â†’ -3  (porque -2.5 se redondea hacia abajo, no hacia cero)

Consejo prÃ¡ctico:
Usa `//` cuando necesites obtener Ãºnicamente la parte entera de una divisiÃ³n. 
Si necesitas el residuo, puedes combinarlo con el operador `%`:

    5 // 2 â†’ 2
    5 % 2  â†’ 1

Entre ambos puedes reconstruir el nÃºmero original:

    (5 // 2) * 2 + (5 % 2) = 2 * 2 + 1 = 5
"""